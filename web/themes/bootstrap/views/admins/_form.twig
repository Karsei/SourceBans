{% set form = this.beginWidget('CActiveForm', {
	'id': 'admin-form',
	'action': action is defined ? action : null,
	'enableAjaxValidation': true,
	'enableClientValidation': true,
	'clientOptions': {
		'inputContainer': '.control-group',
		'validateOnSubmit': true,
	},
	'errorMessageCssClass': 'help-inline',
	'htmlOptions': {
		'class': 'form-horizontal',
	},
}) %}

  <div class="control-group">
    {{ form.labelEx(model, 'name', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.textField(model, 'name', {'size': 60, 'maxlength': 64}) }}
      {{ form.error(model, 'name') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.label(model, 'auth', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.dropDownList(model, 'auth', SB.Admin.getAuthTypes) }}
      {{ form.error(model, 'auth') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.labelEx(model, 'identity', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.textField(model, 'identity', {'size': 60, 'maxlength': 64}) }}
      {{ form.error(model, 'identity') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.labelEx(model, 'email', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.textField(model, 'email', {'size': 60, 'maxlength': 128}) }}
      {{ form.error(model, 'email') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.labelEx(model, 'new_password', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.passwordField(model, 'new_password', {'size': 60, 'maxlength': 64}) }}
      {{ form.error(model, 'new_password') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.labelEx(model, 'server_password', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.textField(model, 'server_password', {'size': 60, 'maxlength': 64}) }}
      {{ form.error(model, 'server_password') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.labelEx(model, 'group_id', {'class': 'control-label'}) }}
    <div class="controls">
      {{ form.dropDownList(model, 'group_id', C.Html.listData(SB.Group.model.findAll({'order': 't.name'}), 'id', 'name'), {'empty': '- ' ~ t('sourcebans', 'None') ~ ' -'}) }}
      {{ form.error(model, 'group_id') }}
    </div>
  </div>

  <div class="control-group">
    {{ form.label(model, 'server_groups.name', {'class': 'control-label'}) }}
    <div class="controls">
{% set server_groups = C.Html.listData(model.server_groups, 'id', 'id') %}
{% for server_group in SB.ServerGroup.model.findAll({'order': 't.name'}) %}
      {% set checkbox = C.Html.checkBox('SBAdmin[server_groups][' ~ server_group.id ~ ']', server_group.id in server_groups, {'value': server_group.id}) ~ server_group.name|e %}
      {{ C.Html.label(checkbox, 'SBAdmin_server_groups_' ~ server_group.id, {'class': 'checkbox'}) }}
{% endfor %}
    </div>
  </div>

  <div class="control-group buttons">
    <div class="controls">
      {{ C.Html.submitButton(t('sourcebans', 'Save'), {'class': 'btn'}) }}
    </div>
  </div>

{% do this.endWidget %}

{% do App.clientScript.registerScript('auth_change', '
  $("#SBAdmin_auth").change(function() {
    if($("#SBAdmin_identity").val() == "" || $("#SBAdmin_identity").val() == "STEAM_")
      $("#SBAdmin_identity").val($(this).val() == "' ~ constant('SBAdmin::STEAM_AUTH') ~ '" ? "STEAM_" : "");
  }).trigger("change");
') %}